<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>